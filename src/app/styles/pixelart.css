@import "tailwindcss";
/* Example usage:
    .tint-border-red::before { filter: var(--tint-red); }
    .tint-border-blue::before { filter: var(--tint-blue); }
    etc.
*/

:root {
  --pixel-size: 4;
  --pixel-size-2: calc(var(--pixel-size) * 2px);
}

@layer components {
  .pixel-border-2 {
    border: calc(var(--pixel-size) * 1px) solid transparent;
    padding: calc(var(--pixel-size) * 1px);
    position: relative;
    /* @apply tint-border-dark; */
  }
  .pixel-border-2::before {
    content: "";
    position: absolute;
    top: calc(var(--pixel-size) * -1px);
    left: calc(var(--pixel-size) * -1px);
    bottom: calc(var(--pixel-size) * -1px);
    right: calc(var(--pixel-size) * -1px);

    border: calc(var(--pixel-size) * 1px) solid red;
    border-image-slice: var(--pixel-size);
    border-image-width: var(--pixel-size);
    border-image-outset: 0;
    border-image-source: url("./2-border.svg");
    padding: calc(var(--pixel-size) * 1px);
  }
  .pixel-border-1 {
    border: calc(var(--pixel-size) * 1px) solid transparent;
    padding: calc(var(--pixel-size) * 1px);
    /* @apply tint-border-dark; */
  }
  .pixel-border-1::before {
    content: "";
    position: absolute;
    top: calc(var(--pixel-size) * -1px);
    left: calc(var(--pixel-size) * -1px);
    bottom: calc(var(--pixel-size) * -1px);
    right: calc(var(--pixel-size) * -1px);

    border: calc(var(--pixel-size) * 1px) solid red;
    border-image-slice: var(--pixel-size);
    border-image-width: var(--pixel-size);
    border-image-outset: 0;
    border-image-source: url("./1-border.svg");
    padding: calc(var(--pixel-size) * 1px);
    filter: var(--pixel-border-tint);
  }
  .pixel-border-box {
    border: calc(var(--pixel-size) * 2px) solid var(--pixel-border);
    padding: calc(var(--pixel-size) * 1px);
    box-sizing: border-box;
  }
  .border-content-2 {
    width: 100%;
    height: 100%;
    background-color: green;
    border: calc(var(--pixel-size) * 1px) solid white;
    border-image-slice: var(--pixel-size);
    border-image-width: var(--pixel-size);
    border-image-outset: 0;
    border-image-source: url("./border-negative.svg");
    padding: calc(var(--pixel-size) * 2.5px);
  }

  .pixel-border-b {
    border-bottom: calc(var(--pixel-size) * 2px) solid var(--pixel-border);
  }
  .pixel-border-t {
    border-top: calc(var(--pixel-size) * 2px) solid var(--pixel-border);
  }
  .pixel-border-l {
    border-left: calc(var(--pixel-size) * 2px) solid var(--pixel-border);
  }
  .pixel-border-r {
    border-right: calc(var(--pixel-size) * 2px) solid var(--pixel-border);
  }
  .pixel-text-shadow {
    text-shadow: calc(var(--pixel-size) * 0.5px) calc(var(--pixel-size) * 0.5px)
        0 var(--color-neutral-content),
      calc(var(--pixel-size) * -0.5px) calc(var(--pixel-size) * -0.5px) 0
        var(--color-neutral-content);
  }
}

/* side note: tailwind is fucking sick  */
@theme {
  --tint-red: brightness(0) saturate(100%) invert(17%) sepia(97%)
    saturate(7492%) hue-rotate(-7deg) brightness(101%) contrast(108%);
  --tint-green: brightness(0) saturate(100%) invert(56%) sepia(94%)
    saturate(747%) hue-rotate(74deg) brightness(92%) contrast(92%);
  --tint-blue: brightness(0) saturate(100%) invert(23%) sepia(98%)
    saturate(7492%) hue-rotate(196deg) brightness(101%) contrast(108%);
  --tint-yellow: brightness(0) saturate(100%) invert(88%) sepia(97%)
    saturate(7492%) hue-rotate(1deg) brightness(101%) contrast(108%);
  --tint-purple: brightness(0) saturate(100%) invert(13%) sepia(98%)
    saturate(7492%) hue-rotate(270deg) brightness(101%) contrast(108%);
  --tint-orange: brightness(0) saturate(100%) invert(53%) sepia(97%)
    saturate(7492%) hue-rotate(-20deg) brightness(101%) contrast(108%);
  --tint-cyan: brightness(0) saturate(100%) invert(76%) sepia(97%)
    saturate(7492%) hue-rotate(145deg) brightness(101%) contrast(108%);
  --tint-pink: brightness(0) saturate(100%) invert(36%) sepia(97%)
    saturate(7492%) hue-rotate(310deg) brightness(101%) contrast(108%);
  --tint-black: brightness(0) saturate(100%) invert(0%) sepia(0%) saturate(0%)
    hue-rotate(0deg) brightness(100%) contrast(100%);
  --tint-dark: saturate(100%) invert(0%) sepia(10%) hue-rotate(10deg)
    brightness(35%) contrast(95%);
  --tint-light: saturate(100%) invert(0%) sepia(10%) hue-rotate(10deg)
    brightness(75%) contrast(95%);

  --tint-b: ;
}

@utility tint-border-* {
  &::before {
    filter: --value(--tint- *);
  }
}
